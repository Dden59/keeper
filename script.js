let initialBet = 100;
let multiplier = 2;
let balance = 1000;
let currentBet = initialBet;
let greed = 0;
let winStreak = 0;
let lossStreak = 0;

function startGame() {
  initialBet = parseFloat(document.getElementById("startBet").value);
  multiplier = parseFloat(document.getElementById("multiplier").value);
  balance = parseFloat(document.getElementById("balance").value);
  currentBet = initialBet;
  updateDisplay();
}

function logResult(win) {
  if (win) {
    balance += currentBet * 1.5 - currentBet;
    currentBet = initialBet;
    winStreak++;
    lossStreak = 0;
    greed += 10;
  } else {
    balance -= currentBet;
    lossStreak++;
    winStreak = 0;
    greed += 5;
    currentBet = calculateRecoveryBet();
  }

  updateDisplay();
  updateGreedBar();
  showMessage();
}

function updateDisplay() {
  document.getElementById("currentBet").innerText = currentBet.toFixed(2);
  document.getElementById("currentBalance").innerText = balance.toFixed(2);
}

function updateGreedBar() {
  let width = Math.min(greed, 100);
  document.getElementById("greedLevel").style.width = width + "%";
}

function showMessage() {
  const msg = document.getElementById("message");
  if (winStreak === 2) msg.innerText = "–£ —Ç–µ–±—è —Ö–æ—Ä–æ—à–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ üëç";
  else if (winStreak === 3) msg.innerText = "–ì–æ—Ä–∂—É—Å—å —Ç–æ–±–æ–π üòá";
  else if (winStreak === 4) msg.innerText = "–ü—Ä–∏—Å—Ç–µ–≥–Ω–∏ —Ä–µ–º–Ω–∏, –º—ã –≤–∑–ª–µ—Ç–∞–µ–º üöÄ";
  else if (winStreak >= 5) msg.innerText = "–ö—É–¥–∞ –ø–æ—Ç—Ä–∞—Ç–∏–º –¥–µ–Ω—å–≥–∏? üòÇ";
  else if (lossStreak === 2) msg.innerText = "–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —è –≤–µ—Ä—é –≤ —Ç–µ–±—è ü•∫";
  else if (lossStreak === 3) msg.innerText = "–°–¥–µ–ª–∞–π –ø–∞—É–∑—É –Ω–∞ –∫–æ—Ñ–µ ‚òïÔ∏è";
  else if (lossStreak >= 4) msg.innerText = "–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ —Å–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å!";
  else msg.innerText = "";
}

function calculateRecoveryBet() {
  let totalLost = 0;
  let tempBet = currentBet;
  for (let i = 0; i < lossStreak; i++) {
    totalLost += tempBet;
    tempBet *= multiplier;
  }

  let neededWin = totalLost / 0.5; // 0.5 = (1.5x profit)
  return Math.ceil(neededWin);
}
