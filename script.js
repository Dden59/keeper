let userBalance = 0;
let currentBet = 0;
let greedLevel = 0;
let winStreak = 0;
let loseStreak = 0;
let notifications = document.getElementById('notificationBox');

function calculateRecommendedBet() {
    userBalance = parseFloat(document.getElementById('userBalance').value);
    let safeBet = Math.floor(userBalance / ((1.5 ** 6) - 1)); // —Ä–∞—Å—á–µ—Ç –Ω–∞ 6 –ø—Ä–æ–∏–≥—Ä—ã—à–µ–π
    currentBet = safeBet;
    document.getElementById('recommendedBetDisplay').innerText = `${safeBet}‚ÇΩ`;
    document.getElementById('currentBetInput').value = safeBet;
    document.getElementById('startSection').classList.add('hidden');
    document.getElementById('betSection').classList.remove('hidden');
}

function startGame() {
    currentBet = parseFloat(document.getElementById('currentBetInput').value);
    document.getElementById('displayBalance').innerText = `${userBalance}‚ÇΩ`;
    document.getElementById('displayBet').innerText = `${currentBet}‚ÇΩ`;
    document.getElementById('betSection').classList.add('hidden');
    document.getElementById('gameSection').classList.remove('hidden');
}

function handleResult(isWin) {
    if (isWin) {
        userBalance += currentBet * 0.5;
        winStreak++;
        loseStreak = 0;
        greedLevel = Math.max(0, greedLevel - 10);
    } else {
        userBalance -= currentBet;
        loseStreak++;
        winStreak = 0;
        greedLevel += 15;

        // —Ä–∞—Å—Å—á—ë—Ç –Ω–æ–≤–æ–π —Å—Ç–∞–≤–∫–∏
        currentBet = calculateRecoveryBet();
        if (currentBet > userBalance) {
            showNotification("–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏ üò≠");
            currentBet = 0;
        }
    }

    updateUI();
}

function calculateRecoveryBet() {
    let lostAmount = 0;
    for (let i = 0; i < loseStreak; i++) {
        lostAmount += currentBet * (1.5 ** i);
    }
    return Math.ceil((lostAmount + currentBet * 0.5) / 1.5);
}

function updateUI() {
    document.getElementById('displayBalance').innerText = `${Math.floor(userBalance)}‚ÇΩ`;
    document.getElementById('displayBet').innerText = `${Math.floor(currentBet)}‚ÇΩ`;
    updateGreedBar();
    showStreakMessages();

    if (userBalance <= (userBalance * 0.3)) {
        showNotification("–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ —Å–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å!");
    }
}

function updateGreedBar() {
    const fill = document.getElementById('greedFill');
    let percentage = Math.min(100, greedLevel);
    fill.style.width = percentage + "%";

    const message = document.getElementById('greedMessage');
    if (percentage < 25) message.innerText = "–•–æ–ª–æ–¥–µ–Ω –∫–∞–∫ –ª—ë–¥";
    else if (percentage < 50) message.innerText = "–ù–∞—á–∏–Ω–∞–µ—Ç –∑–∞–∫–∏–ø–∞—Ç—å...";
    else if (percentage < 75) message.innerText = "–ñ–∞—Ä–∫–æ!";
    else message.innerText = "–¢—ã –Ω–∞ –≥—Ä–∞–Ω–∏, –æ—Å—Ç—ã–Ω—å!";
}

function showStreakMessages() {
    let msg = "";
    if (winStreak === 2) msg = "–£ —Ç–µ–±—è —Ö–æ—Ä–æ—à–æ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –ø—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µüëç";
    if (winStreak === 3) msg = "–ì–æ—Ä–∂—É—Å—å —Ç–æ–±–æ–π üòá";
    if (winStreak === 4) msg = "–ü—Ä–∏—Å—Ç–µ–≥–Ω–∏ —Ä–µ–º–Ω–∏, –º—ã –≤–∑–ª–µ—Ç–∞–µ–ºüöÄ";
    if (winStreak === 5) msg = "–ö—É–¥–∞ –ø–æ—Ç—Ä–∞—Ç–∏–º –¥–µ–Ω—å–≥–∏? üòÇ";

    if (loseStreak === 2) msg = "–ù–∏—á–µ–≥–æ —Å—Ç—Ä–∞—à–Ω–æ–≥–æ, —è –≤–µ—Ä—é –≤ —Ç–µ–±—è ü•∫";
    if (loseStreak === 3) msg = "–°–¥–µ–ª–∞–π –ø–∞—É–∑—É –Ω–∞ –∫–æ—Ñ–µ ‚òïÔ∏è";
    if (loseStreak === 4) msg = "–í—ã—Å–æ–∫–∏–π —Ä–∏—Å–∫ —Å–ª–∏—Ç—å –±–∞–ª–∞–Ω—Å!";

    if (msg) showNotification(msg);
}

function showNotification(message) {
    notifications.innerText = message;
    notifications.style.display = 'block';
}

function resetGame() {
    window.location.reload();
}
